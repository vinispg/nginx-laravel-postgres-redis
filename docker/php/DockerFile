FROM php:8.2-fpm

# Instala depend  ncias do sistema e PHP
RUN apt-get update && apt-get install -y \
    build-essential \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    jpegoptim optipng pngquant gifsicle \
    vim \
    git \
    curl \
    zip \
    unzip \
    libpq-dev \
    libzip-dev \
    libexif-dev \
    libonig-dev \
    nodejs \
    npm

# Define o diret  rio de trabalho
WORKDIR /var/www/application

# Limpa o cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Instala extens  es PHP
RUN docker-php-ext-install pdo pdo_pgsql mbstring zip exif pcntl
RUN docker-php-ext-install gd

# Instala a extens  o Redis via PECL e a habilita
RUN pecl install redis \
    && docker-php-ext-enable redis

# Instala o Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Adiciona o usu  rio para a aplica    o Laravel
RUN groupadd -g 1000 www && \
    useradd -u 1000 -ms /bin/bash -g www www

# Copia os arquivos da aplica    o e define a propriedade
COPY --chown=www:www ./application /var/www/application

# Ajusta permiss  es dos diret  rios necess  rios
RUN chown -R www:www /var/www/application/storage /var/www/application/bootstrap/cache && \
    chmod -R 775 /var/www/application/storage /var/www/application/bootstrap/cache

#teste
RUN chown -R www-data:www-data /var/www

# Instala depend  ncias PHP e build do npm
RUN composer install --no-interaction --prefer-dist --optimize-autoloader
RUN npm install && npm run build

# Expondo a porta 9000
EXPOSE 9000

# Muda o usu  rio para `www`
USER www

# Comando de inicializa    o
CMD ["php-fpm"]
